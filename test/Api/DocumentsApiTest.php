<?php
/**
 * DocumentsApiTest
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ONIX API
 *
 * Dokumentácia ku Web API programu ONIX.  Pre testovanie s reálnymi dátami (dotazovanie servera) je potrebné zadať autorizačný token, ktorý Vám poskytla firma Kros a.s..  Pri každom dotaze je potrebné uviesť cestu ku databáze s dátami (taktiež poskytnutú firmou Kros a.s.).
 *
 * The version of the OpenAPI document: V1
 * Contact: servis.onix@kros.sk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Please update the test case below to test the endpoint.
 */

namespace OpenAPI\Client\Test\Api;

use \OpenAPI\Client\Configuration;
use \OpenAPI\Client\ApiException;
use \OpenAPI\Client\ObjectSerializer;
use PHPUnit\Framework\TestCase;

/**
 * DocumentsApiTest Class Doc Comment
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */
class DocumentsApiTest extends TestCase
{

    /**
     * Setup before running any test cases
     */
    public static function setUpBeforeClass(): void
    {
    }

    /**
     * Setup before running each test case
     */
    public function setUp(): void
    {
    }

    /**
     * Clean up after running each test case
     */
    public function tearDown(): void
    {
    }

    /**
     * Clean up after running all test cases
     */
    public static function tearDownAfterClass(): void
    {
    }

    /**
     * Test case for documentsAddOrEditDocument
     *
     * Pridá jeden doklad, do konkrétnej evidencie dokladov určenej podľa parametra documentTypeId. Dáta dokladu sa nachádzajú v \"body\" requestu.  V prípade, že pridávaný doklad už existuje vykoná sa akcia edit a prebehne aktualizácia údajov na hlavičke dokladu.   V prípade, že budú v dotaze odoslané aj položky tak všetky pôvodné sú zmazané a nahradené novými..
     *
     */
    public function testDocumentsAddOrEditDocument()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentsAddOrEditDocuments
     *
     * Pridá viacero dokladov, do konkrétnej evidencie dokladov určenej podľa parametra documentTypeId. Dáta dokladov sa nachádzajú v \"body\" requestu..
     *
     */
    public function testDocumentsAddOrEditDocuments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentsDeleteDocuments
     *
     * Vymaže doklad. Doklad je určený na základe čísla, kódu číselného radu a kódu evidencie..
     *
     */
    public function testDocumentsDeleteDocuments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }

    /**
     * Test case for documentsGetDocuments
     *
     * Vracia zoznam všetkých dokumentov, z konkrétnej evidencie. Evidencia je určená na základe parametra documentTypeId..
     *
     */
    public function testDocumentsGetDocuments()
    {
        // TODO: implement
        $this->markTestIncomplete('Not implemented');
    }
}
