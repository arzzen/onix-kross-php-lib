<?php
/**
 * DtoDocumentGet
 *
 * PHP version 7.3
 *
 * @category Class
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 */

/**
 * ONIX API
 *
 * Dokumentácia ku Web API programu ONIX.  Pre testovanie s reálnymi dátami (dotazovanie servera) je potrebné zadať autorizačný token, ktorý Vám poskytla firma Kros a.s..  Pri každom dotaze je potrebné uviesť cestu ku databáze s dátami (taktiež poskytnutú firmou Kros a.s.).
 *
 * The version of the OpenAPI document: V1
 * Contact: servis.onix@kros.sk
 * Generated by: https://openapi-generator.tech
 * OpenAPI Generator version: 5.3.0
 */

/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

namespace OpenAPI\Client\Model;

use \ArrayAccess;
use \OpenAPI\Client\ObjectSerializer;

/**
 * DtoDocumentGet Class Doc Comment
 *
 * @category Class
 * @description DTO trieda pre doklad.
 * @package  OpenAPI\Client
 * @author   OpenAPI Generator team
 * @link     https://openapi-generator.tech
 * @implements \ArrayAccess<TKey, TValue>
 * @template TKey int|null
 * @template TValue mixed|null
 */
class DtoDocumentGet implements ModelInterface, ArrayAccess, \JsonSerializable
{
    public const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $openAPIModelName = 'DtoDocument_get';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $openAPITypes = [
        'id_record' => 'int',
        'doc_description' => 'string',
        'introduction_text' => 'string',
        'final_text' => 'string',
        'delivery_text' => 'string',
        'subject' => 'string',
        'date_document' => '\DateTime',
        'date_admission' => '\DateTime',
        'date_due' => '\DateTime',
        'date_chargebility_date' => '\DateTime',
        'date_release' => '\DateTime',
        'date_exp_realization' => '\DateTime',
        'date_realization' => '\DateTime',
        'date_delivery_date' => '\DateTime',
        'date_receive' => '\DateTime',
        'date_validity' => '\DateTime',
        'date_reservation_doc' => '\DateTime',
        'date_changed' => '\DateTime',
        'transport_type' => 'string',
        'payment_type' => 'string',
        'exchange_rate' => 'double',
        'sum' => 'double',
        'sum_lc' => 'double',
        'sum_vat' => 'double',
        'sum_vat_lc' => 'double',
        'payment_remaining' => 'double',
        'payment_status' => 'double',
        'payment_status_lc' => 'double',
        'curr' => 'string',
        'stock_transfer_name' => 'string',
        'ns_code' => 'string',
        'ns_evid_code' => 'string',
        'ns_number' => 'string',
        'account_number' => 'string',
        'variable_symbol' => 'string',
        'specific_symbol' => 'string',
        'bank_code' => 'string',
        'constant_symbol' => 'string',
        'external_number' => 'string',
        'iban' => 'string',
        'swift' => 'string',
        'total_price_calculation' => 'int',
        'document_state' => 'string',
        'partner_reg' => 'string',
        'partner_tax' => 'string',
        'partner_center' => 'string',
        'partner_department' => 'string',
        'partner_street' => 'string',
        'partner_street_no' => 'string',
        'partner_postcode' => 'string',
        'partner_city' => 'string',
        'partner_state' => 'string',
        'partner_pa_street' => 'string',
        'partner_pa_street_no' => 'string',
        'partner_pa_postcode' => 'string',
        'partner_pa_city' => 'string',
        'partner_pa_state' => 'string',
        'partner_da_street' => 'string',
        'partner_da_street_no' => 'string',
        'partner_da_postcode' => 'string',
        'partner_da_city' => 'string',
        'partner_da_state' => 'string',
        'partner_name' => 'string',
        'partner_pa_name' => 'string',
        'partner_da_name' => 'string',
        'original_number' => 'string',
        'guid_ext' => 'string',
        'partner_email' => 'string',
        'partner_first_name' => 'string',
        'partner_surname' => 'string',
        'partner_telephone_number' => 'string',
        'doc_ia_name_1' => 'string',
        'doc_ia_code_1' => 'string',
        'doc_ia_name_2' => 'string',
        'doc_ia_code_2' => 'string',
        'doc_ia_name_3' => 'string',
        'doc_ia_code_3' => 'string',
        'doc_ia_name_4' => 'string',
        'doc_ia_code_4' => 'string',
        'doc_ia_name_5' => 'string',
        'doc_ia_code_5' => 'string',
        'doc_ia_name_6' => 'string',
        'doc_ia_code_6' => 'string',
        'doc_transfer_ia_name_1' => 'string',
        'doc_transfer_ia_code_1' => 'string',
        'doc_transfer_ia_name_2' => 'string',
        'doc_transfer_ia_code_2' => 'string',
        'doc_transfer_ia_name_3' => 'string',
        'doc_transfer_ia_code_3' => 'string',
        'doc_transfer_ia_name_4' => 'string',
        'doc_transfer_ia_code_4' => 'string',
        'doc_transfer_ia_name_5' => 'string',
        'doc_transfer_ia_code_5' => 'string',
        'doc_transfer_ia_name_6' => 'string',
        'doc_transfer_ia_code_6' => 'string',
        'ns_number_partner' => 'string',
        'commission' => 'string',
        'weight_stock_items' => 'double',
        'items' => '\OpenAPI\Client\Model\DtoDocumentItemGet[]',
        'enclosures' => '\OpenAPI\Client\Model\DtoDocumentEnclosure[]',
        'custom_columns' => '\OpenAPI\Client\Model\CustomField[]'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      * @phpstan-var array<string, string|null>
      * @psalm-var array<string, string|null>
      */
    protected static $openAPIFormats = [
        'id_record' => 'int64',
        'doc_description' => null,
        'introduction_text' => null,
        'final_text' => null,
        'delivery_text' => null,
        'subject' => null,
        'date_document' => 'date-time',
        'date_admission' => 'date-time',
        'date_due' => 'date-time',
        'date_chargebility_date' => 'date-time',
        'date_release' => 'date-time',
        'date_exp_realization' => 'date-time',
        'date_realization' => 'date-time',
        'date_delivery_date' => 'date-time',
        'date_receive' => 'date-time',
        'date_validity' => 'date-time',
        'date_reservation_doc' => 'date-time',
        'date_changed' => 'date-time',
        'transport_type' => null,
        'payment_type' => null,
        'exchange_rate' => 'double',
        'sum' => 'double',
        'sum_lc' => 'double',
        'sum_vat' => 'double',
        'sum_vat_lc' => 'double',
        'payment_remaining' => 'double',
        'payment_status' => 'double',
        'payment_status_lc' => 'double',
        'curr' => null,
        'stock_transfer_name' => null,
        'ns_code' => null,
        'ns_evid_code' => null,
        'ns_number' => null,
        'account_number' => null,
        'variable_symbol' => null,
        'specific_symbol' => null,
        'bank_code' => null,
        'constant_symbol' => null,
        'external_number' => null,
        'iban' => null,
        'swift' => null,
        'total_price_calculation' => 'int32',
        'document_state' => null,
        'partner_reg' => null,
        'partner_tax' => null,
        'partner_center' => null,
        'partner_department' => null,
        'partner_street' => null,
        'partner_street_no' => null,
        'partner_postcode' => null,
        'partner_city' => null,
        'partner_state' => null,
        'partner_pa_street' => null,
        'partner_pa_street_no' => null,
        'partner_pa_postcode' => null,
        'partner_pa_city' => null,
        'partner_pa_state' => null,
        'partner_da_street' => null,
        'partner_da_street_no' => null,
        'partner_da_postcode' => null,
        'partner_da_city' => null,
        'partner_da_state' => null,
        'partner_name' => null,
        'partner_pa_name' => null,
        'partner_da_name' => null,
        'original_number' => null,
        'guid_ext' => null,
        'partner_email' => null,
        'partner_first_name' => null,
        'partner_surname' => null,
        'partner_telephone_number' => null,
        'doc_ia_name_1' => null,
        'doc_ia_code_1' => null,
        'doc_ia_name_2' => null,
        'doc_ia_code_2' => null,
        'doc_ia_name_3' => null,
        'doc_ia_code_3' => null,
        'doc_ia_name_4' => null,
        'doc_ia_code_4' => null,
        'doc_ia_name_5' => null,
        'doc_ia_code_5' => null,
        'doc_ia_name_6' => null,
        'doc_ia_code_6' => null,
        'doc_transfer_ia_name_1' => null,
        'doc_transfer_ia_code_1' => null,
        'doc_transfer_ia_name_2' => null,
        'doc_transfer_ia_code_2' => null,
        'doc_transfer_ia_name_3' => null,
        'doc_transfer_ia_code_3' => null,
        'doc_transfer_ia_name_4' => null,
        'doc_transfer_ia_code_4' => null,
        'doc_transfer_ia_name_5' => null,
        'doc_transfer_ia_code_5' => null,
        'doc_transfer_ia_name_6' => null,
        'doc_transfer_ia_code_6' => null,
        'ns_number_partner' => null,
        'commission' => null,
        'weight_stock_items' => 'double',
        'items' => null,
        'enclosures' => null,
        'custom_columns' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPITypes()
    {
        return self::$openAPITypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function openAPIFormats()
    {
        return self::$openAPIFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'id_record' => 'IdRecord',
        'doc_description' => 'Doc_Description',
        'introduction_text' => 'Introduction_Text',
        'final_text' => 'Final_Text',
        'delivery_text' => 'Delivery_Text',
        'subject' => 'Subject',
        'date_document' => 'Date_Document',
        'date_admission' => 'Date_Admission',
        'date_due' => 'Date_Due',
        'date_chargebility_date' => 'Date_Chargebility_Date',
        'date_release' => 'Date_Release',
        'date_exp_realization' => 'Date_Exp_Realization',
        'date_realization' => 'Date_Realization',
        'date_delivery_date' => 'Date_Delivery_Date',
        'date_receive' => 'Date_Receive',
        'date_validity' => 'Date_Validity',
        'date_reservation_doc' => 'Date_Reservation_Doc',
        'date_changed' => 'Date_Changed',
        'transport_type' => 'Transport_Type',
        'payment_type' => 'Payment_Type',
        'exchange_rate' => 'Exchange_Rate',
        'sum' => 'Sum',
        'sum_lc' => 'Sum_Lc',
        'sum_vat' => 'Sum_Vat',
        'sum_vat_lc' => 'Sum_Vat_Lc',
        'payment_remaining' => 'Payment_Remaining',
        'payment_status' => 'Payment_Status',
        'payment_status_lc' => 'Payment_Status_Lc',
        'curr' => 'Curr',
        'stock_transfer_name' => 'Stock_Transfer_Name',
        'ns_code' => 'Ns_Code',
        'ns_evid_code' => 'Ns_Evid_Code',
        'ns_number' => 'Ns_Number',
        'account_number' => 'Account_Number',
        'variable_symbol' => 'Variable_Symbol',
        'specific_symbol' => 'Specific_Symbol',
        'bank_code' => 'Bank_Code',
        'constant_symbol' => 'Constant_Symbol',
        'external_number' => 'External_Number',
        'iban' => 'Iban',
        'swift' => 'Swift',
        'total_price_calculation' => 'Total_Price_Calculation',
        'document_state' => 'Document_State',
        'partner_reg' => 'Partner_Reg',
        'partner_tax' => 'Partner_Tax',
        'partner_center' => 'Partner_Center',
        'partner_department' => 'Partner_Department',
        'partner_street' => 'Partner_Street',
        'partner_street_no' => 'Partner_Street_No',
        'partner_postcode' => 'Partner_Postcode',
        'partner_city' => 'Partner_City',
        'partner_state' => 'Partner_State',
        'partner_pa_street' => 'Partner_Pa_Street',
        'partner_pa_street_no' => 'Partner_Pa_Street_No',
        'partner_pa_postcode' => 'Partner_Pa_Postcode',
        'partner_pa_city' => 'Partner_Pa_City',
        'partner_pa_state' => 'Partner_Pa_State',
        'partner_da_street' => 'Partner_Da_Street',
        'partner_da_street_no' => 'Partner_Da_Street_No',
        'partner_da_postcode' => 'Partner_Da_Postcode',
        'partner_da_city' => 'Partner_Da_City',
        'partner_da_state' => 'Partner_Da_State',
        'partner_name' => 'Partner_Name',
        'partner_pa_name' => 'Partner_Pa_Name',
        'partner_da_name' => 'Partner_Da_Name',
        'original_number' => 'Original_Number',
        'guid_ext' => 'Guid_Ext',
        'partner_email' => 'Partner_Email',
        'partner_first_name' => 'Partner_FirstName',
        'partner_surname' => 'Partner_Surname',
        'partner_telephone_number' => 'Partner_Telephone_Number',
        'doc_ia_name_1' => 'Doc_Ia_Name_1',
        'doc_ia_code_1' => 'Doc_Ia_Code_1',
        'doc_ia_name_2' => 'Doc_Ia_Name_2',
        'doc_ia_code_2' => 'Doc_Ia_Code_2',
        'doc_ia_name_3' => 'Doc_Ia_Name_3',
        'doc_ia_code_3' => 'Doc_Ia_Code_3',
        'doc_ia_name_4' => 'Doc_Ia_Name_4',
        'doc_ia_code_4' => 'Doc_Ia_Code_4',
        'doc_ia_name_5' => 'Doc_Ia_Name_5',
        'doc_ia_code_5' => 'Doc_Ia_Code_5',
        'doc_ia_name_6' => 'Doc_Ia_Name_6',
        'doc_ia_code_6' => 'Doc_Ia_Code_6',
        'doc_transfer_ia_name_1' => 'Doc_Transfer_Ia_Name_1',
        'doc_transfer_ia_code_1' => 'Doc_Transfer_Ia_Code_1',
        'doc_transfer_ia_name_2' => 'Doc_Transfer_Ia_Name_2',
        'doc_transfer_ia_code_2' => 'Doc_Transfer_Ia_Code_2',
        'doc_transfer_ia_name_3' => 'Doc_Transfer_Ia_Name_3',
        'doc_transfer_ia_code_3' => 'Doc_Transfer_Ia_Code_3',
        'doc_transfer_ia_name_4' => 'Doc_Transfer_Ia_Name_4',
        'doc_transfer_ia_code_4' => 'Doc_Transfer_Ia_Code_4',
        'doc_transfer_ia_name_5' => 'Doc_Transfer_Ia_Name_5',
        'doc_transfer_ia_code_5' => 'Doc_Transfer_Ia_Code_5',
        'doc_transfer_ia_name_6' => 'Doc_Transfer_Ia_Name_6',
        'doc_transfer_ia_code_6' => 'Doc_Transfer_Ia_Code_6',
        'ns_number_partner' => 'Ns_Number_Partner',
        'commission' => 'Commission',
        'weight_stock_items' => 'Weight_Stock_Items',
        'items' => 'Items',
        'enclosures' => 'Enclosures',
        'custom_columns' => 'CustomColumns'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'id_record' => 'setIdRecord',
        'doc_description' => 'setDocDescription',
        'introduction_text' => 'setIntroductionText',
        'final_text' => 'setFinalText',
        'delivery_text' => 'setDeliveryText',
        'subject' => 'setSubject',
        'date_document' => 'setDateDocument',
        'date_admission' => 'setDateAdmission',
        'date_due' => 'setDateDue',
        'date_chargebility_date' => 'setDateChargebilityDate',
        'date_release' => 'setDateRelease',
        'date_exp_realization' => 'setDateExpRealization',
        'date_realization' => 'setDateRealization',
        'date_delivery_date' => 'setDateDeliveryDate',
        'date_receive' => 'setDateReceive',
        'date_validity' => 'setDateValidity',
        'date_reservation_doc' => 'setDateReservationDoc',
        'date_changed' => 'setDateChanged',
        'transport_type' => 'setTransportType',
        'payment_type' => 'setPaymentType',
        'exchange_rate' => 'setExchangeRate',
        'sum' => 'setSum',
        'sum_lc' => 'setSumLc',
        'sum_vat' => 'setSumVat',
        'sum_vat_lc' => 'setSumVatLc',
        'payment_remaining' => 'setPaymentRemaining',
        'payment_status' => 'setPaymentStatus',
        'payment_status_lc' => 'setPaymentStatusLc',
        'curr' => 'setCurr',
        'stock_transfer_name' => 'setStockTransferName',
        'ns_code' => 'setNsCode',
        'ns_evid_code' => 'setNsEvidCode',
        'ns_number' => 'setNsNumber',
        'account_number' => 'setAccountNumber',
        'variable_symbol' => 'setVariableSymbol',
        'specific_symbol' => 'setSpecificSymbol',
        'bank_code' => 'setBankCode',
        'constant_symbol' => 'setConstantSymbol',
        'external_number' => 'setExternalNumber',
        'iban' => 'setIban',
        'swift' => 'setSwift',
        'total_price_calculation' => 'setTotalPriceCalculation',
        'document_state' => 'setDocumentState',
        'partner_reg' => 'setPartnerReg',
        'partner_tax' => 'setPartnerTax',
        'partner_center' => 'setPartnerCenter',
        'partner_department' => 'setPartnerDepartment',
        'partner_street' => 'setPartnerStreet',
        'partner_street_no' => 'setPartnerStreetNo',
        'partner_postcode' => 'setPartnerPostcode',
        'partner_city' => 'setPartnerCity',
        'partner_state' => 'setPartnerState',
        'partner_pa_street' => 'setPartnerPaStreet',
        'partner_pa_street_no' => 'setPartnerPaStreetNo',
        'partner_pa_postcode' => 'setPartnerPaPostcode',
        'partner_pa_city' => 'setPartnerPaCity',
        'partner_pa_state' => 'setPartnerPaState',
        'partner_da_street' => 'setPartnerDaStreet',
        'partner_da_street_no' => 'setPartnerDaStreetNo',
        'partner_da_postcode' => 'setPartnerDaPostcode',
        'partner_da_city' => 'setPartnerDaCity',
        'partner_da_state' => 'setPartnerDaState',
        'partner_name' => 'setPartnerName',
        'partner_pa_name' => 'setPartnerPaName',
        'partner_da_name' => 'setPartnerDaName',
        'original_number' => 'setOriginalNumber',
        'guid_ext' => 'setGuidExt',
        'partner_email' => 'setPartnerEmail',
        'partner_first_name' => 'setPartnerFirstName',
        'partner_surname' => 'setPartnerSurname',
        'partner_telephone_number' => 'setPartnerTelephoneNumber',
        'doc_ia_name_1' => 'setDocIaName1',
        'doc_ia_code_1' => 'setDocIaCode1',
        'doc_ia_name_2' => 'setDocIaName2',
        'doc_ia_code_2' => 'setDocIaCode2',
        'doc_ia_name_3' => 'setDocIaName3',
        'doc_ia_code_3' => 'setDocIaCode3',
        'doc_ia_name_4' => 'setDocIaName4',
        'doc_ia_code_4' => 'setDocIaCode4',
        'doc_ia_name_5' => 'setDocIaName5',
        'doc_ia_code_5' => 'setDocIaCode5',
        'doc_ia_name_6' => 'setDocIaName6',
        'doc_ia_code_6' => 'setDocIaCode6',
        'doc_transfer_ia_name_1' => 'setDocTransferIaName1',
        'doc_transfer_ia_code_1' => 'setDocTransferIaCode1',
        'doc_transfer_ia_name_2' => 'setDocTransferIaName2',
        'doc_transfer_ia_code_2' => 'setDocTransferIaCode2',
        'doc_transfer_ia_name_3' => 'setDocTransferIaName3',
        'doc_transfer_ia_code_3' => 'setDocTransferIaCode3',
        'doc_transfer_ia_name_4' => 'setDocTransferIaName4',
        'doc_transfer_ia_code_4' => 'setDocTransferIaCode4',
        'doc_transfer_ia_name_5' => 'setDocTransferIaName5',
        'doc_transfer_ia_code_5' => 'setDocTransferIaCode5',
        'doc_transfer_ia_name_6' => 'setDocTransferIaName6',
        'doc_transfer_ia_code_6' => 'setDocTransferIaCode6',
        'ns_number_partner' => 'setNsNumberPartner',
        'commission' => 'setCommission',
        'weight_stock_items' => 'setWeightStockItems',
        'items' => 'setItems',
        'enclosures' => 'setEnclosures',
        'custom_columns' => 'setCustomColumns'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'id_record' => 'getIdRecord',
        'doc_description' => 'getDocDescription',
        'introduction_text' => 'getIntroductionText',
        'final_text' => 'getFinalText',
        'delivery_text' => 'getDeliveryText',
        'subject' => 'getSubject',
        'date_document' => 'getDateDocument',
        'date_admission' => 'getDateAdmission',
        'date_due' => 'getDateDue',
        'date_chargebility_date' => 'getDateChargebilityDate',
        'date_release' => 'getDateRelease',
        'date_exp_realization' => 'getDateExpRealization',
        'date_realization' => 'getDateRealization',
        'date_delivery_date' => 'getDateDeliveryDate',
        'date_receive' => 'getDateReceive',
        'date_validity' => 'getDateValidity',
        'date_reservation_doc' => 'getDateReservationDoc',
        'date_changed' => 'getDateChanged',
        'transport_type' => 'getTransportType',
        'payment_type' => 'getPaymentType',
        'exchange_rate' => 'getExchangeRate',
        'sum' => 'getSum',
        'sum_lc' => 'getSumLc',
        'sum_vat' => 'getSumVat',
        'sum_vat_lc' => 'getSumVatLc',
        'payment_remaining' => 'getPaymentRemaining',
        'payment_status' => 'getPaymentStatus',
        'payment_status_lc' => 'getPaymentStatusLc',
        'curr' => 'getCurr',
        'stock_transfer_name' => 'getStockTransferName',
        'ns_code' => 'getNsCode',
        'ns_evid_code' => 'getNsEvidCode',
        'ns_number' => 'getNsNumber',
        'account_number' => 'getAccountNumber',
        'variable_symbol' => 'getVariableSymbol',
        'specific_symbol' => 'getSpecificSymbol',
        'bank_code' => 'getBankCode',
        'constant_symbol' => 'getConstantSymbol',
        'external_number' => 'getExternalNumber',
        'iban' => 'getIban',
        'swift' => 'getSwift',
        'total_price_calculation' => 'getTotalPriceCalculation',
        'document_state' => 'getDocumentState',
        'partner_reg' => 'getPartnerReg',
        'partner_tax' => 'getPartnerTax',
        'partner_center' => 'getPartnerCenter',
        'partner_department' => 'getPartnerDepartment',
        'partner_street' => 'getPartnerStreet',
        'partner_street_no' => 'getPartnerStreetNo',
        'partner_postcode' => 'getPartnerPostcode',
        'partner_city' => 'getPartnerCity',
        'partner_state' => 'getPartnerState',
        'partner_pa_street' => 'getPartnerPaStreet',
        'partner_pa_street_no' => 'getPartnerPaStreetNo',
        'partner_pa_postcode' => 'getPartnerPaPostcode',
        'partner_pa_city' => 'getPartnerPaCity',
        'partner_pa_state' => 'getPartnerPaState',
        'partner_da_street' => 'getPartnerDaStreet',
        'partner_da_street_no' => 'getPartnerDaStreetNo',
        'partner_da_postcode' => 'getPartnerDaPostcode',
        'partner_da_city' => 'getPartnerDaCity',
        'partner_da_state' => 'getPartnerDaState',
        'partner_name' => 'getPartnerName',
        'partner_pa_name' => 'getPartnerPaName',
        'partner_da_name' => 'getPartnerDaName',
        'original_number' => 'getOriginalNumber',
        'guid_ext' => 'getGuidExt',
        'partner_email' => 'getPartnerEmail',
        'partner_first_name' => 'getPartnerFirstName',
        'partner_surname' => 'getPartnerSurname',
        'partner_telephone_number' => 'getPartnerTelephoneNumber',
        'doc_ia_name_1' => 'getDocIaName1',
        'doc_ia_code_1' => 'getDocIaCode1',
        'doc_ia_name_2' => 'getDocIaName2',
        'doc_ia_code_2' => 'getDocIaCode2',
        'doc_ia_name_3' => 'getDocIaName3',
        'doc_ia_code_3' => 'getDocIaCode3',
        'doc_ia_name_4' => 'getDocIaName4',
        'doc_ia_code_4' => 'getDocIaCode4',
        'doc_ia_name_5' => 'getDocIaName5',
        'doc_ia_code_5' => 'getDocIaCode5',
        'doc_ia_name_6' => 'getDocIaName6',
        'doc_ia_code_6' => 'getDocIaCode6',
        'doc_transfer_ia_name_1' => 'getDocTransferIaName1',
        'doc_transfer_ia_code_1' => 'getDocTransferIaCode1',
        'doc_transfer_ia_name_2' => 'getDocTransferIaName2',
        'doc_transfer_ia_code_2' => 'getDocTransferIaCode2',
        'doc_transfer_ia_name_3' => 'getDocTransferIaName3',
        'doc_transfer_ia_code_3' => 'getDocTransferIaCode3',
        'doc_transfer_ia_name_4' => 'getDocTransferIaName4',
        'doc_transfer_ia_code_4' => 'getDocTransferIaCode4',
        'doc_transfer_ia_name_5' => 'getDocTransferIaName5',
        'doc_transfer_ia_code_5' => 'getDocTransferIaCode5',
        'doc_transfer_ia_name_6' => 'getDocTransferIaName6',
        'doc_transfer_ia_code_6' => 'getDocTransferIaCode6',
        'ns_number_partner' => 'getNsNumberPartner',
        'commission' => 'getCommission',
        'weight_stock_items' => 'getWeightStockItems',
        'items' => 'getItems',
        'enclosures' => 'getEnclosures',
        'custom_columns' => 'getCustomColumns'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$openAPIModelName;
    }

    const TOTAL_PRICE_CALCULATION_1 = 1;
    const TOTAL_PRICE_CALCULATION_2 = 2;

    /**
     * Gets allowable values of the enum
     *
     * @return string[]
     */
    public function getTotalPriceCalculationAllowableValues()
    {
        return [
            self::TOTAL_PRICE_CALCULATION_1,
            self::TOTAL_PRICE_CALCULATION_2,
        ];
    }

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['id_record'] = $data['id_record'] ?? null;
        $this->container['doc_description'] = $data['doc_description'] ?? null;
        $this->container['introduction_text'] = $data['introduction_text'] ?? null;
        $this->container['final_text'] = $data['final_text'] ?? null;
        $this->container['delivery_text'] = $data['delivery_text'] ?? null;
        $this->container['subject'] = $data['subject'] ?? null;
        $this->container['date_document'] = $data['date_document'] ?? null;
        $this->container['date_admission'] = $data['date_admission'] ?? null;
        $this->container['date_due'] = $data['date_due'] ?? null;
        $this->container['date_chargebility_date'] = $data['date_chargebility_date'] ?? null;
        $this->container['date_release'] = $data['date_release'] ?? null;
        $this->container['date_exp_realization'] = $data['date_exp_realization'] ?? null;
        $this->container['date_realization'] = $data['date_realization'] ?? null;
        $this->container['date_delivery_date'] = $data['date_delivery_date'] ?? null;
        $this->container['date_receive'] = $data['date_receive'] ?? null;
        $this->container['date_validity'] = $data['date_validity'] ?? null;
        $this->container['date_reservation_doc'] = $data['date_reservation_doc'] ?? null;
        $this->container['date_changed'] = $data['date_changed'] ?? null;
        $this->container['transport_type'] = $data['transport_type'] ?? null;
        $this->container['payment_type'] = $data['payment_type'] ?? null;
        $this->container['exchange_rate'] = $data['exchange_rate'] ?? null;
        $this->container['sum'] = $data['sum'] ?? null;
        $this->container['sum_lc'] = $data['sum_lc'] ?? null;
        $this->container['sum_vat'] = $data['sum_vat'] ?? null;
        $this->container['sum_vat_lc'] = $data['sum_vat_lc'] ?? null;
        $this->container['payment_remaining'] = $data['payment_remaining'] ?? null;
        $this->container['payment_status'] = $data['payment_status'] ?? null;
        $this->container['payment_status_lc'] = $data['payment_status_lc'] ?? null;
        $this->container['curr'] = $data['curr'] ?? null;
        $this->container['stock_transfer_name'] = $data['stock_transfer_name'] ?? null;
        $this->container['ns_code'] = $data['ns_code'] ?? null;
        $this->container['ns_evid_code'] = $data['ns_evid_code'] ?? null;
        $this->container['ns_number'] = $data['ns_number'] ?? null;
        $this->container['account_number'] = $data['account_number'] ?? null;
        $this->container['variable_symbol'] = $data['variable_symbol'] ?? null;
        $this->container['specific_symbol'] = $data['specific_symbol'] ?? null;
        $this->container['bank_code'] = $data['bank_code'] ?? null;
        $this->container['constant_symbol'] = $data['constant_symbol'] ?? null;
        $this->container['external_number'] = $data['external_number'] ?? null;
        $this->container['iban'] = $data['iban'] ?? null;
        $this->container['swift'] = $data['swift'] ?? null;
        $this->container['total_price_calculation'] = $data['total_price_calculation'] ?? null;
        $this->container['document_state'] = $data['document_state'] ?? null;
        $this->container['partner_reg'] = $data['partner_reg'] ?? null;
        $this->container['partner_tax'] = $data['partner_tax'] ?? null;
        $this->container['partner_center'] = $data['partner_center'] ?? null;
        $this->container['partner_department'] = $data['partner_department'] ?? null;
        $this->container['partner_street'] = $data['partner_street'] ?? null;
        $this->container['partner_street_no'] = $data['partner_street_no'] ?? null;
        $this->container['partner_postcode'] = $data['partner_postcode'] ?? null;
        $this->container['partner_city'] = $data['partner_city'] ?? null;
        $this->container['partner_state'] = $data['partner_state'] ?? null;
        $this->container['partner_pa_street'] = $data['partner_pa_street'] ?? null;
        $this->container['partner_pa_street_no'] = $data['partner_pa_street_no'] ?? null;
        $this->container['partner_pa_postcode'] = $data['partner_pa_postcode'] ?? null;
        $this->container['partner_pa_city'] = $data['partner_pa_city'] ?? null;
        $this->container['partner_pa_state'] = $data['partner_pa_state'] ?? null;
        $this->container['partner_da_street'] = $data['partner_da_street'] ?? null;
        $this->container['partner_da_street_no'] = $data['partner_da_street_no'] ?? null;
        $this->container['partner_da_postcode'] = $data['partner_da_postcode'] ?? null;
        $this->container['partner_da_city'] = $data['partner_da_city'] ?? null;
        $this->container['partner_da_state'] = $data['partner_da_state'] ?? null;
        $this->container['partner_name'] = $data['partner_name'] ?? null;
        $this->container['partner_pa_name'] = $data['partner_pa_name'] ?? null;
        $this->container['partner_da_name'] = $data['partner_da_name'] ?? null;
        $this->container['original_number'] = $data['original_number'] ?? null;
        $this->container['guid_ext'] = $data['guid_ext'] ?? null;
        $this->container['partner_email'] = $data['partner_email'] ?? null;
        $this->container['partner_first_name'] = $data['partner_first_name'] ?? null;
        $this->container['partner_surname'] = $data['partner_surname'] ?? null;
        $this->container['partner_telephone_number'] = $data['partner_telephone_number'] ?? null;
        $this->container['doc_ia_name_1'] = $data['doc_ia_name_1'] ?? null;
        $this->container['doc_ia_code_1'] = $data['doc_ia_code_1'] ?? null;
        $this->container['doc_ia_name_2'] = $data['doc_ia_name_2'] ?? null;
        $this->container['doc_ia_code_2'] = $data['doc_ia_code_2'] ?? null;
        $this->container['doc_ia_name_3'] = $data['doc_ia_name_3'] ?? null;
        $this->container['doc_ia_code_3'] = $data['doc_ia_code_3'] ?? null;
        $this->container['doc_ia_name_4'] = $data['doc_ia_name_4'] ?? null;
        $this->container['doc_ia_code_4'] = $data['doc_ia_code_4'] ?? null;
        $this->container['doc_ia_name_5'] = $data['doc_ia_name_5'] ?? null;
        $this->container['doc_ia_code_5'] = $data['doc_ia_code_5'] ?? null;
        $this->container['doc_ia_name_6'] = $data['doc_ia_name_6'] ?? null;
        $this->container['doc_ia_code_6'] = $data['doc_ia_code_6'] ?? null;
        $this->container['doc_transfer_ia_name_1'] = $data['doc_transfer_ia_name_1'] ?? null;
        $this->container['doc_transfer_ia_code_1'] = $data['doc_transfer_ia_code_1'] ?? null;
        $this->container['doc_transfer_ia_name_2'] = $data['doc_transfer_ia_name_2'] ?? null;
        $this->container['doc_transfer_ia_code_2'] = $data['doc_transfer_ia_code_2'] ?? null;
        $this->container['doc_transfer_ia_name_3'] = $data['doc_transfer_ia_name_3'] ?? null;
        $this->container['doc_transfer_ia_code_3'] = $data['doc_transfer_ia_code_3'] ?? null;
        $this->container['doc_transfer_ia_name_4'] = $data['doc_transfer_ia_name_4'] ?? null;
        $this->container['doc_transfer_ia_code_4'] = $data['doc_transfer_ia_code_4'] ?? null;
        $this->container['doc_transfer_ia_name_5'] = $data['doc_transfer_ia_name_5'] ?? null;
        $this->container['doc_transfer_ia_code_5'] = $data['doc_transfer_ia_code_5'] ?? null;
        $this->container['doc_transfer_ia_name_6'] = $data['doc_transfer_ia_name_6'] ?? null;
        $this->container['doc_transfer_ia_code_6'] = $data['doc_transfer_ia_code_6'] ?? null;
        $this->container['ns_number_partner'] = $data['ns_number_partner'] ?? null;
        $this->container['commission'] = $data['commission'] ?? null;
        $this->container['weight_stock_items'] = $data['weight_stock_items'] ?? null;
        $this->container['items'] = $data['items'] ?? null;
        $this->container['enclosures'] = $data['enclosures'] ?? null;
        $this->container['custom_columns'] = $data['custom_columns'] ?? null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        $allowedValues = $this->getTotalPriceCalculationAllowableValues();
        if (!is_null($this->container['total_price_calculation']) && !in_array($this->container['total_price_calculation'], $allowedValues, true)) {
            $invalidProperties[] = sprintf(
                "invalid value '%s' for 'total_price_calculation', must be one of '%s'",
                $this->container['total_price_calculation'],
                implode("', '", $allowedValues)
            );
        }

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets id_record
     *
     * @return int|null
     */
    public function getIdRecord()
    {
        return $this->container['id_record'];
    }

    /**
     * Sets id_record
     *
     * @param int|null $id_record ID záznamu
     *
     * @return self
     */
    public function setIdRecord($id_record)
    {
        $this->container['id_record'] = $id_record;

        return $this;
    }

    /**
     * Gets doc_description
     *
     * @return string|null
     */
    public function getDocDescription()
    {
        return $this->container['doc_description'];
    }

    /**
     * Sets doc_description
     *
     * @param string|null $doc_description Poznámka.
     *
     * @return self
     */
    public function setDocDescription($doc_description)
    {
        $this->container['doc_description'] = $doc_description;

        return $this;
    }

    /**
     * Gets introduction_text
     *
     * @return string|null
     */
    public function getIntroductionText()
    {
        return $this->container['introduction_text'];
    }

    /**
     * Sets introduction_text
     *
     * @param string|null $introduction_text Úvodný text.
     *
     * @return self
     */
    public function setIntroductionText($introduction_text)
    {
        $this->container['introduction_text'] = $introduction_text;

        return $this;
    }

    /**
     * Gets final_text
     *
     * @return string|null
     */
    public function getFinalText()
    {
        return $this->container['final_text'];
    }

    /**
     * Sets final_text
     *
     * @param string|null $final_text Záverečný text.
     *
     * @return self
     */
    public function setFinalText($final_text)
    {
        $this->container['final_text'] = $final_text;

        return $this;
    }

    /**
     * Gets delivery_text
     *
     * @return string|null
     */
    public function getDeliveryText()
    {
        return $this->container['delivery_text'];
    }

    /**
     * Sets delivery_text
     *
     * @param string|null $delivery_text Dodacie a platobné podmienky.
     *
     * @return self
     */
    public function setDeliveryText($delivery_text)
    {
        $this->container['delivery_text'] = $delivery_text;

        return $this;
    }

    /**
     * Gets subject
     *
     * @return string|null
     */
    public function getSubject()
    {
        return $this->container['subject'];
    }

    /**
     * Sets subject
     *
     * @param string|null $subject Predmet.
     *
     * @return self
     */
    public function setSubject($subject)
    {
        $this->container['subject'] = $subject;

        return $this;
    }

    /**
     * Gets date_document
     *
     * @return \DateTime|null
     */
    public function getDateDocument()
    {
        return $this->container['date_document'];
    }

    /**
     * Sets date_document
     *
     * @param \DateTime|null $date_document Dátum vyhotovenia dokladu.  Rok dátumu slúži ako párovacie kritérium dokladu. V prípade, že nie je zadaný použije sa aktuálny.
     *
     * @return self
     */
    public function setDateDocument($date_document)
    {
        $this->container['date_document'] = $date_document;

        return $this;
    }

    /**
     * Gets date_admission
     *
     * @return \DateTime|null
     */
    public function getDateAdmission()
    {
        return $this->container['date_admission'];
    }

    /**
     * Sets date_admission
     *
     * @param \DateTime|null $date_admission Dátum prijatia.
     *
     * @return self
     */
    public function setDateAdmission($date_admission)
    {
        $this->container['date_admission'] = $date_admission;

        return $this;
    }

    /**
     * Gets date_due
     *
     * @return \DateTime|null
     */
    public function getDateDue()
    {
        return $this->container['date_due'];
    }

    /**
     * Sets date_due
     *
     * @param \DateTime|null $date_due Dátum splatnosti.
     *
     * @return self
     */
    public function setDateDue($date_due)
    {
        $this->container['date_due'] = $date_due;

        return $this;
    }

    /**
     * Gets date_chargebility_date
     *
     * @return \DateTime|null
     */
    public function getDateChargebilityDate()
    {
        return $this->container['date_chargebility_date'];
    }

    /**
     * Sets date_chargebility_date
     *
     * @param \DateTime|null $date_chargebility_date Dátum vzniku daňovej povinnosti.
     *
     * @return self
     */
    public function setDateChargebilityDate($date_chargebility_date)
    {
        $this->container['date_chargebility_date'] = $date_chargebility_date;

        return $this;
    }

    /**
     * Gets date_release
     *
     * @return \DateTime|null
     */
    public function getDateRelease()
    {
        return $this->container['date_release'];
    }

    /**
     * Sets date_release
     *
     * @param \DateTime|null $date_release Dátum a čas výdaja zo skladu.
     *
     * @return self
     */
    public function setDateRelease($date_release)
    {
        $this->container['date_release'] = $date_release;

        return $this;
    }

    /**
     * Gets date_exp_realization
     *
     * @return \DateTime|null
     */
    public function getDateExpRealization()
    {
        return $this->container['date_exp_realization'];
    }

    /**
     * Sets date_exp_realization
     *
     * @param \DateTime|null $date_exp_realization Dátum predpokladanej realizácie.
     *
     * @return self
     */
    public function setDateExpRealization($date_exp_realization)
    {
        $this->container['date_exp_realization'] = $date_exp_realization;

        return $this;
    }

    /**
     * Gets date_realization
     *
     * @return \DateTime|null
     */
    public function getDateRealization()
    {
        return $this->container['date_realization'];
    }

    /**
     * Sets date_realization
     *
     * @param \DateTime|null $date_realization Dátum skutočnej realizácie.
     *
     * @return self
     */
    public function setDateRealization($date_realization)
    {
        $this->container['date_realization'] = $date_realization;

        return $this;
    }

    /**
     * Gets date_delivery_date
     *
     * @return \DateTime|null
     */
    public function getDateDeliveryDate()
    {
        return $this->container['date_delivery_date'];
    }

    /**
     * Sets date_delivery_date
     *
     * @param \DateTime|null $date_delivery_date Dátum dodania.
     *
     * @return self
     */
    public function setDateDeliveryDate($date_delivery_date)
    {
        $this->container['date_delivery_date'] = $date_delivery_date;

        return $this;
    }

    /**
     * Gets date_receive
     *
     * @return \DateTime|null
     */
    public function getDateReceive()
    {
        return $this->container['date_receive'];
    }

    /**
     * Sets date_receive
     *
     * @param \DateTime|null $date_receive Dátum a čas príjmu na sklad.
     *
     * @return self
     */
    public function setDateReceive($date_receive)
    {
        $this->container['date_receive'] = $date_receive;

        return $this;
    }

    /**
     * Gets date_validity
     *
     * @return \DateTime|null
     */
    public function getDateValidity()
    {
        return $this->container['date_validity'];
    }

    /**
     * Sets date_validity
     *
     * @param \DateTime|null $date_validity Dátum platnosti dokladu.
     *
     * @return self
     */
    public function setDateValidity($date_validity)
    {
        $this->container['date_validity'] = $date_validity;

        return $this;
    }

    /**
     * Gets date_reservation_doc
     *
     * @return \DateTime|null
     */
    public function getDateReservationDoc()
    {
        return $this->container['date_reservation_doc'];
    }

    /**
     * Sets date_reservation_doc
     *
     * @param \DateTime|null $date_reservation_doc Dátum rezervácie.
     *
     * @return self
     */
    public function setDateReservationDoc($date_reservation_doc)
    {
        $this->container['date_reservation_doc'] = $date_reservation_doc;

        return $this;
    }

    /**
     * Gets date_changed
     *
     * @return \DateTime|null
     */
    public function getDateChanged()
    {
        return $this->container['date_changed'];
    }

    /**
     * Sets date_changed
     *
     * @param \DateTime|null $date_changed História - dátum zmeny dokladu.
     *
     * @return self
     */
    public function setDateChanged($date_changed)
    {
        $this->container['date_changed'] = $date_changed;

        return $this;
    }

    /**
     * Gets transport_type
     *
     * @return string|null
     */
    public function getTransportType()
    {
        return $this->container['transport_type'];
    }

    /**
     * Sets transport_type
     *
     * @param string|null $transport_type Spôsob dopravy.
     *
     * @return self
     */
    public function setTransportType($transport_type)
    {
        $this->container['transport_type'] = $transport_type;

        return $this;
    }

    /**
     * Gets payment_type
     *
     * @return string|null
     */
    public function getPaymentType()
    {
        return $this->container['payment_type'];
    }

    /**
     * Sets payment_type
     *
     * @param string|null $payment_type Forma úhrady.
     *
     * @return self
     */
    public function setPaymentType($payment_type)
    {
        $this->container['payment_type'] = $payment_type;

        return $this;
    }

    /**
     * Gets exchange_rate
     *
     * @return double|null
     */
    public function getExchangeRate()
    {
        return $this->container['exchange_rate'];
    }

    /**
     * Sets exchange_rate
     *
     * @param double|null $exchange_rate Kurz meny dokladu.
     *
     * @return self
     */
    public function setExchangeRate($exchange_rate)
    {
        $this->container['exchange_rate'] = $exchange_rate;

        return $this;
    }

    /**
     * Gets sum
     *
     * @return double|null
     */
    public function getSum()
    {
        return $this->container['sum'];
    }

    /**
     * Sets sum
     *
     * @param double|null $sum Suma v mene dokladu.
     *
     * @return self
     */
    public function setSum($sum)
    {
        $this->container['sum'] = $sum;

        return $this;
    }

    /**
     * Gets sum_lc
     *
     * @return double|null
     */
    public function getSumLc()
    {
        return $this->container['sum_lc'];
    }

    /**
     * Sets sum_lc
     *
     * @param double|null $sum_lc Suma dokladu v legislatívnej mene.
     *
     * @return self
     */
    public function setSumLc($sum_lc)
    {
        $this->container['sum_lc'] = $sum_lc;

        return $this;
    }

    /**
     * Gets sum_vat
     *
     * @return double|null
     */
    public function getSumVat()
    {
        return $this->container['sum_vat'];
    }

    /**
     * Sets sum_vat
     *
     * @param double|null $sum_vat Suma s DPH v mene dokladu.
     *
     * @return self
     */
    public function setSumVat($sum_vat)
    {
        $this->container['sum_vat'] = $sum_vat;

        return $this;
    }

    /**
     * Gets sum_vat_lc
     *
     * @return double|null
     */
    public function getSumVatLc()
    {
        return $this->container['sum_vat_lc'];
    }

    /**
     * Sets sum_vat_lc
     *
     * @param double|null $sum_vat_lc Suma s DPH v legislatívnej mene.
     *
     * @return self
     */
    public function setSumVatLc($sum_vat_lc)
    {
        $this->container['sum_vat_lc'] = $sum_vat_lc;

        return $this;
    }

    /**
     * Gets payment_remaining
     *
     * @return double|null
     */
    public function getPaymentRemaining()
    {
        return $this->container['payment_remaining'];
    }

    /**
     * Sets payment_remaining
     *
     * @param double|null $payment_remaining Zostatok k úhrade s DPH v mene dokladu.
     *
     * @return self
     */
    public function setPaymentRemaining($payment_remaining)
    {
        $this->container['payment_remaining'] = $payment_remaining;

        return $this;
    }

    /**
     * Gets payment_status
     *
     * @return double|null
     */
    public function getPaymentStatus()
    {
        return $this->container['payment_status'];
    }

    /**
     * Sets payment_status
     *
     * @param double|null $payment_status Suma úhrady s DPH v mene dokladu.
     *
     * @return self
     */
    public function setPaymentStatus($payment_status)
    {
        $this->container['payment_status'] = $payment_status;

        return $this;
    }

    /**
     * Gets payment_status_lc
     *
     * @return double|null
     */
    public function getPaymentStatusLc()
    {
        return $this->container['payment_status_lc'];
    }

    /**
     * Sets payment_status_lc
     *
     * @param double|null $payment_status_lc Suma úhrady s DPH v legislatívnej mene.
     *
     * @return self
     */
    public function setPaymentStatusLc($payment_status_lc)
    {
        $this->container['payment_status_lc'] = $payment_status_lc;

        return $this;
    }

    /**
     * Gets curr
     *
     * @return string|null
     */
    public function getCurr()
    {
        return $this->container['curr'];
    }

    /**
     * Sets curr
     *
     * @param string|null $curr Mena dokladu.
     *
     * @return self
     */
    public function setCurr($curr)
    {
        $this->container['curr'] = $curr;

        return $this;
    }

    /**
     * Gets stock_transfer_name
     *
     * @return string|null
     */
    public function getStockTransferName()
    {
        return $this->container['stock_transfer_name'];
    }

    /**
     * Sets stock_transfer_name
     *
     * @param string|null $stock_transfer_name Cieľový sklad názov - prevodka.
     *
     * @return self
     */
    public function setStockTransferName($stock_transfer_name)
    {
        $this->container['stock_transfer_name'] = $stock_transfer_name;

        return $this;
    }

    /**
     * Gets ns_code
     *
     * @return string|null
     */
    public function getNsCode()
    {
        return $this->container['ns_code'];
    }

    /**
     * Sets ns_code
     *
     * @param string|null $ns_code Kód číselného radu. Ak je zadaný tak slúži ako párovacie kritérium.
     *
     * @return self
     */
    public function setNsCode($ns_code)
    {
        $this->container['ns_code'] = $ns_code;

        return $this;
    }

    /**
     * Gets ns_evid_code
     *
     * @return string|null
     */
    public function getNsEvidCode()
    {
        return $this->container['ns_evid_code'];
    }

    /**
     * Sets ns_evid_code
     *
     * @param string|null $ns_evid_code Kód evidencie. Ak je zadaný tak slúži ako párovacie kritérium.
     *
     * @return self
     */
    public function setNsEvidCode($ns_evid_code)
    {
        $this->container['ns_evid_code'] = $ns_evid_code;

        return $this;
    }

    /**
     * Gets ns_number
     *
     * @return string|null
     */
    public function getNsNumber()
    {
        return $this->container['ns_number'];
    }

    /**
     * Sets ns_number
     *
     * @param string|null $ns_number Číslo dokladu. Slúži ako párovacie kritérium dokladu.
     *
     * @return self
     */
    public function setNsNumber($ns_number)
    {
        $this->container['ns_number'] = $ns_number;

        return $this;
    }

    /**
     * Gets account_number
     *
     * @return string|null
     */
    public function getAccountNumber()
    {
        return $this->container['account_number'];
    }

    /**
     * Sets account_number
     *
     * @param string|null $account_number Číslo účtu (predajné doklady - môj účet, nákupné doklady - účet partnera).
     *
     * @return self
     */
    public function setAccountNumber($account_number)
    {
        $this->container['account_number'] = $account_number;

        return $this;
    }

    /**
     * Gets variable_symbol
     *
     * @return string|null
     */
    public function getVariableSymbol()
    {
        return $this->container['variable_symbol'];
    }

    /**
     * Sets variable_symbol
     *
     * @param string|null $variable_symbol Variabilný symbol.
     *
     * @return self
     */
    public function setVariableSymbol($variable_symbol)
    {
        $this->container['variable_symbol'] = $variable_symbol;

        return $this;
    }

    /**
     * Gets specific_symbol
     *
     * @return string|null
     */
    public function getSpecificSymbol()
    {
        return $this->container['specific_symbol'];
    }

    /**
     * Sets specific_symbol
     *
     * @param string|null $specific_symbol Špecifický symbol.
     *
     * @return self
     */
    public function setSpecificSymbol($specific_symbol)
    {
        $this->container['specific_symbol'] = $specific_symbol;

        return $this;
    }

    /**
     * Gets bank_code
     *
     * @return string|null
     */
    public function getBankCode()
    {
        return $this->container['bank_code'];
    }

    /**
     * Sets bank_code
     *
     * @param string|null $bank_code Kód banky (predajné doklady - môj účet, nákupné doklady - účet partnera).
     *
     * @return self
     */
    public function setBankCode($bank_code)
    {
        $this->container['bank_code'] = $bank_code;

        return $this;
    }

    /**
     * Gets constant_symbol
     *
     * @return string|null
     */
    public function getConstantSymbol()
    {
        return $this->container['constant_symbol'];
    }

    /**
     * Sets constant_symbol
     *
     * @param string|null $constant_symbol Konštantný symbol.
     *
     * @return self
     */
    public function setConstantSymbol($constant_symbol)
    {
        $this->container['constant_symbol'] = $constant_symbol;

        return $this;
    }

    /**
     * Gets external_number
     *
     * @return string|null
     */
    public function getExternalNumber()
    {
        return $this->container['external_number'];
    }

    /**
     * Sets external_number
     *
     * @param string|null $external_number Externé číslo dokladu.
     *
     * @return self
     */
    public function setExternalNumber($external_number)
    {
        $this->container['external_number'] = $external_number;

        return $this;
    }

    /**
     * Gets iban
     *
     * @return string|null
     */
    public function getIban()
    {
        return $this->container['iban'];
    }

    /**
     * Sets iban
     *
     * @param string|null $iban Číslo účtu vo formáte IBAN (predajné doklady - môj účet, nákupné doklady - účet partnera).
     *
     * @return self
     */
    public function setIban($iban)
    {
        $this->container['iban'] = $iban;

        return $this;
    }

    /**
     * Gets swift
     *
     * @return string|null
     */
    public function getSwift()
    {
        return $this->container['swift'];
    }

    /**
     * Sets swift
     *
     * @param string|null $swift SWIFT kód banky (predajné doklady - môj účet, nákupné doklady - účet partnera).
     *
     * @return self
     */
    public function setSwift($swift)
    {
        $this->container['swift'] = $swift;

        return $this;
    }

    /**
     * Gets total_price_calculation
     *
     * @return int|null
     */
    public function getTotalPriceCalculation()
    {
        return $this->container['total_price_calculation'];
    }

    /**
     * Sets total_price_calculation
     *
     * @param int|null $total_price_calculation Spôsob výpočtu celkovej sumy dokladu.  1 - Bez DPH,  2 - S DPH.
     *
     * @return self
     */
    public function setTotalPriceCalculation($total_price_calculation)
    {
        $allowedValues = $this->getTotalPriceCalculationAllowableValues();
        if (!is_null($total_price_calculation) && !in_array($total_price_calculation, $allowedValues, true)) {
            throw new \InvalidArgumentException(
                sprintf(
                    "Invalid value '%s' for 'total_price_calculation', must be one of '%s'",
                    $total_price_calculation,
                    implode("', '", $allowedValues)
                )
            );
        }
        $this->container['total_price_calculation'] = $total_price_calculation;

        return $this;
    }

    /**
     * Gets document_state
     *
     * @return string|null
     */
    public function getDocumentState()
    {
        return $this->container['document_state'];
    }

    /**
     * Sets document_state
     *
     * @param string|null $document_state Stav dokladu.
     *
     * @return self
     */
    public function setDocumentState($document_state)
    {
        $this->container['document_state'] = $document_state;

        return $this;
    }

    /**
     * Gets partner_reg
     *
     * @return string|null
     */
    public function getPartnerReg()
    {
        return $this->container['partner_reg'];
    }

    /**
     * Sets partner_reg
     *
     * @param string|null $partner_reg IČO partnera.
     *
     * @return self
     */
    public function setPartnerReg($partner_reg)
    {
        $this->container['partner_reg'] = $partner_reg;

        return $this;
    }

    /**
     * Gets partner_tax
     *
     * @return string|null
     */
    public function getPartnerTax()
    {
        return $this->container['partner_tax'];
    }

    /**
     * Sets partner_tax
     *
     * @param string|null $partner_tax DIČ partnera.
     *
     * @return self
     */
    public function setPartnerTax($partner_tax)
    {
        $this->container['partner_tax'] = $partner_tax;

        return $this;
    }

    /**
     * Gets partner_center
     *
     * @return string|null
     */
    public function getPartnerCenter()
    {
        return $this->container['partner_center'];
    }

    /**
     * Sets partner_center
     *
     * @param string|null $partner_center Partner - stredisko.
     *
     * @return self
     */
    public function setPartnerCenter($partner_center)
    {
        $this->container['partner_center'] = $partner_center;

        return $this;
    }

    /**
     * Gets partner_department
     *
     * @return string|null
     */
    public function getPartnerDepartment()
    {
        return $this->container['partner_department'];
    }

    /**
     * Sets partner_department
     *
     * @param string|null $partner_department Partner - prevádzka.
     *
     * @return self
     */
    public function setPartnerDepartment($partner_department)
    {
        $this->container['partner_department'] = $partner_department;

        return $this;
    }

    /**
     * Gets partner_street
     *
     * @return string|null
     */
    public function getPartnerStreet()
    {
        return $this->container['partner_street'];
    }

    /**
     * Sets partner_street
     *
     * @param string|null $partner_street Partner - Fakturačná adresa - ulica.
     *
     * @return self
     */
    public function setPartnerStreet($partner_street)
    {
        $this->container['partner_street'] = $partner_street;

        return $this;
    }

    /**
     * Gets partner_street_no
     *
     * @return string|null
     */
    public function getPartnerStreetNo()
    {
        return $this->container['partner_street_no'];
    }

    /**
     * Sets partner_street_no
     *
     * @param string|null $partner_street_no Partner - Fakturačná adresa - ulica číslo.
     *
     * @return self
     */
    public function setPartnerStreetNo($partner_street_no)
    {
        $this->container['partner_street_no'] = $partner_street_no;

        return $this;
    }

    /**
     * Gets partner_postcode
     *
     * @return string|null
     */
    public function getPartnerPostcode()
    {
        return $this->container['partner_postcode'];
    }

    /**
     * Sets partner_postcode
     *
     * @param string|null $partner_postcode Partner - Fakturačná adresa - PSČ.
     *
     * @return self
     */
    public function setPartnerPostcode($partner_postcode)
    {
        $this->container['partner_postcode'] = $partner_postcode;

        return $this;
    }

    /**
     * Gets partner_city
     *
     * @return string|null
     */
    public function getPartnerCity()
    {
        return $this->container['partner_city'];
    }

    /**
     * Sets partner_city
     *
     * @param string|null $partner_city Partner - Fakturačná adresa - mesto.
     *
     * @return self
     */
    public function setPartnerCity($partner_city)
    {
        $this->container['partner_city'] = $partner_city;

        return $this;
    }

    /**
     * Gets partner_state
     *
     * @return string|null
     */
    public function getPartnerState()
    {
        return $this->container['partner_state'];
    }

    /**
     * Sets partner_state
     *
     * @param string|null $partner_state Partner - Fakturačná adresa - štát.
     *
     * @return self
     */
    public function setPartnerState($partner_state)
    {
        $this->container['partner_state'] = $partner_state;

        return $this;
    }

    /**
     * Gets partner_pa_street
     *
     * @return string|null
     */
    public function getPartnerPaStreet()
    {
        return $this->container['partner_pa_street'];
    }

    /**
     * Sets partner_pa_street
     *
     * @param string|null $partner_pa_street Partner - Korešpondenčná adresa - ulica.
     *
     * @return self
     */
    public function setPartnerPaStreet($partner_pa_street)
    {
        $this->container['partner_pa_street'] = $partner_pa_street;

        return $this;
    }

    /**
     * Gets partner_pa_street_no
     *
     * @return string|null
     */
    public function getPartnerPaStreetNo()
    {
        return $this->container['partner_pa_street_no'];
    }

    /**
     * Sets partner_pa_street_no
     *
     * @param string|null $partner_pa_street_no Partner - Korešpondenčná adresa - ulica číslo.
     *
     * @return self
     */
    public function setPartnerPaStreetNo($partner_pa_street_no)
    {
        $this->container['partner_pa_street_no'] = $partner_pa_street_no;

        return $this;
    }

    /**
     * Gets partner_pa_postcode
     *
     * @return string|null
     */
    public function getPartnerPaPostcode()
    {
        return $this->container['partner_pa_postcode'];
    }

    /**
     * Sets partner_pa_postcode
     *
     * @param string|null $partner_pa_postcode Partner - Korešpondenčná adresa - PSČ.
     *
     * @return self
     */
    public function setPartnerPaPostcode($partner_pa_postcode)
    {
        $this->container['partner_pa_postcode'] = $partner_pa_postcode;

        return $this;
    }

    /**
     * Gets partner_pa_city
     *
     * @return string|null
     */
    public function getPartnerPaCity()
    {
        return $this->container['partner_pa_city'];
    }

    /**
     * Sets partner_pa_city
     *
     * @param string|null $partner_pa_city Partner - Korešpondenčná adresa - mesto.
     *
     * @return self
     */
    public function setPartnerPaCity($partner_pa_city)
    {
        $this->container['partner_pa_city'] = $partner_pa_city;

        return $this;
    }

    /**
     * Gets partner_pa_state
     *
     * @return string|null
     */
    public function getPartnerPaState()
    {
        return $this->container['partner_pa_state'];
    }

    /**
     * Sets partner_pa_state
     *
     * @param string|null $partner_pa_state Partner - Korešpondenčná adresa - štát.
     *
     * @return self
     */
    public function setPartnerPaState($partner_pa_state)
    {
        $this->container['partner_pa_state'] = $partner_pa_state;

        return $this;
    }

    /**
     * Gets partner_da_street
     *
     * @return string|null
     */
    public function getPartnerDaStreet()
    {
        return $this->container['partner_da_street'];
    }

    /**
     * Sets partner_da_street
     *
     * @param string|null $partner_da_street Partner - Dodacia adresa - ulica.
     *
     * @return self
     */
    public function setPartnerDaStreet($partner_da_street)
    {
        $this->container['partner_da_street'] = $partner_da_street;

        return $this;
    }

    /**
     * Gets partner_da_street_no
     *
     * @return string|null
     */
    public function getPartnerDaStreetNo()
    {
        return $this->container['partner_da_street_no'];
    }

    /**
     * Sets partner_da_street_no
     *
     * @param string|null $partner_da_street_no Partner - Dodacia adresa - ulica číslo.
     *
     * @return self
     */
    public function setPartnerDaStreetNo($partner_da_street_no)
    {
        $this->container['partner_da_street_no'] = $partner_da_street_no;

        return $this;
    }

    /**
     * Gets partner_da_postcode
     *
     * @return string|null
     */
    public function getPartnerDaPostcode()
    {
        return $this->container['partner_da_postcode'];
    }

    /**
     * Sets partner_da_postcode
     *
     * @param string|null $partner_da_postcode Partner - Dodacia adresa - PSČ.
     *
     * @return self
     */
    public function setPartnerDaPostcode($partner_da_postcode)
    {
        $this->container['partner_da_postcode'] = $partner_da_postcode;

        return $this;
    }

    /**
     * Gets partner_da_city
     *
     * @return string|null
     */
    public function getPartnerDaCity()
    {
        return $this->container['partner_da_city'];
    }

    /**
     * Sets partner_da_city
     *
     * @param string|null $partner_da_city Partner - Dodacia adresa - mesto.
     *
     * @return self
     */
    public function setPartnerDaCity($partner_da_city)
    {
        $this->container['partner_da_city'] = $partner_da_city;

        return $this;
    }

    /**
     * Gets partner_da_state
     *
     * @return string|null
     */
    public function getPartnerDaState()
    {
        return $this->container['partner_da_state'];
    }

    /**
     * Sets partner_da_state
     *
     * @param string|null $partner_da_state Partner - Dodacia adresa - štát.
     *
     * @return self
     */
    public function setPartnerDaState($partner_da_state)
    {
        $this->container['partner_da_state'] = $partner_da_state;

        return $this;
    }

    /**
     * Gets partner_name
     *
     * @return string|null
     */
    public function getPartnerName()
    {
        return $this->container['partner_name'];
    }

    /**
     * Sets partner_name
     *
     * @param string|null $partner_name Názov partnera.
     *
     * @return self
     */
    public function setPartnerName($partner_name)
    {
        $this->container['partner_name'] = $partner_name;

        return $this;
    }

    /**
     * Gets partner_pa_name
     *
     * @return string|null
     */
    public function getPartnerPaName()
    {
        return $this->container['partner_pa_name'];
    }

    /**
     * Sets partner_pa_name
     *
     * @param string|null $partner_pa_name Partner - Korešpondenčná adresa - názov
     *
     * @return self
     */
    public function setPartnerPaName($partner_pa_name)
    {
        $this->container['partner_pa_name'] = $partner_pa_name;

        return $this;
    }

    /**
     * Gets partner_da_name
     *
     * @return string|null
     */
    public function getPartnerDaName()
    {
        return $this->container['partner_da_name'];
    }

    /**
     * Sets partner_da_name
     *
     * @param string|null $partner_da_name Partner - Dodacia adresa - názov
     *
     * @return self
     */
    public function setPartnerDaName($partner_da_name)
    {
        $this->container['partner_da_name'] = $partner_da_name;

        return $this;
    }

    /**
     * Gets original_number
     *
     * @return string|null
     */
    public function getOriginalNumber()
    {
        return $this->container['original_number'];
    }

    /**
     * Sets original_number
     *
     * @param string|null $original_number Číslo pôvodného dokladu (platné pre dobropisy).
     *
     * @return self
     */
    public function setOriginalNumber($original_number)
    {
        $this->container['original_number'] = $original_number;

        return $this;
    }

    /**
     * Gets guid_ext
     *
     * @return string|null
     */
    public function getGuidExt()
    {
        return $this->container['guid_ext'];
    }

    /**
     * Sets guid_ext
     *
     * @param string|null $guid_ext Kľúč záznamu v externej DB. Ak je zadaný tak slúži ako párovacie kritérium.
     *
     * @return self
     */
    public function setGuidExt($guid_ext)
    {
        $this->container['guid_ext'] = $guid_ext;

        return $this;
    }

    /**
     * Gets partner_email
     *
     * @return string|null
     */
    public function getPartnerEmail()
    {
        return $this->container['partner_email'];
    }

    /**
     * Sets partner_email
     *
     * @param string|null $partner_email Partner - email.
     *
     * @return self
     */
    public function setPartnerEmail($partner_email)
    {
        $this->container['partner_email'] = $partner_email;

        return $this;
    }

    /**
     * Gets partner_first_name
     *
     * @return string|null
     */
    public function getPartnerFirstName()
    {
        return $this->container['partner_first_name'];
    }

    /**
     * Sets partner_first_name
     *
     * @param string|null $partner_first_name Partner - meno.
     *
     * @return self
     */
    public function setPartnerFirstName($partner_first_name)
    {
        $this->container['partner_first_name'] = $partner_first_name;

        return $this;
    }

    /**
     * Gets partner_surname
     *
     * @return string|null
     */
    public function getPartnerSurname()
    {
        return $this->container['partner_surname'];
    }

    /**
     * Sets partner_surname
     *
     * @param string|null $partner_surname Partner - priezvisko.
     *
     * @return self
     */
    public function setPartnerSurname($partner_surname)
    {
        $this->container['partner_surname'] = $partner_surname;

        return $this;
    }

    /**
     * Gets partner_telephone_number
     *
     * @return string|null
     */
    public function getPartnerTelephoneNumber()
    {
        return $this->container['partner_telephone_number'];
    }

    /**
     * Sets partner_telephone_number
     *
     * @param string|null $partner_telephone_number Partner - telefón.
     *
     * @return self
     */
    public function setPartnerTelephoneNumber($partner_telephone_number)
    {
        $this->container['partner_telephone_number'] = $partner_telephone_number;

        return $this;
    }

    /**
     * Gets doc_ia_name_1
     *
     * @return string|null
     */
    public function getDocIaName1()
    {
        return $this->container['doc_ia_name_1'];
    }

    /**
     * Sets doc_ia_name_1
     *
     * @param string|null $doc_ia_name_1 Interné rozúčtovanie 1 - názov.
     *
     * @return self
     */
    public function setDocIaName1($doc_ia_name_1)
    {
        $this->container['doc_ia_name_1'] = $doc_ia_name_1;

        return $this;
    }

    /**
     * Gets doc_ia_code_1
     *
     * @return string|null
     */
    public function getDocIaCode1()
    {
        return $this->container['doc_ia_code_1'];
    }

    /**
     * Sets doc_ia_code_1
     *
     * @param string|null $doc_ia_code_1 Interné rozúčtovanie 1 - kód.
     *
     * @return self
     */
    public function setDocIaCode1($doc_ia_code_1)
    {
        $this->container['doc_ia_code_1'] = $doc_ia_code_1;

        return $this;
    }

    /**
     * Gets doc_ia_name_2
     *
     * @return string|null
     */
    public function getDocIaName2()
    {
        return $this->container['doc_ia_name_2'];
    }

    /**
     * Sets doc_ia_name_2
     *
     * @param string|null $doc_ia_name_2 Interné rozúčtovanie 2 - názov.
     *
     * @return self
     */
    public function setDocIaName2($doc_ia_name_2)
    {
        $this->container['doc_ia_name_2'] = $doc_ia_name_2;

        return $this;
    }

    /**
     * Gets doc_ia_code_2
     *
     * @return string|null
     */
    public function getDocIaCode2()
    {
        return $this->container['doc_ia_code_2'];
    }

    /**
     * Sets doc_ia_code_2
     *
     * @param string|null $doc_ia_code_2 Interné rozúčtovanie 2 - kód.
     *
     * @return self
     */
    public function setDocIaCode2($doc_ia_code_2)
    {
        $this->container['doc_ia_code_2'] = $doc_ia_code_2;

        return $this;
    }

    /**
     * Gets doc_ia_name_3
     *
     * @return string|null
     */
    public function getDocIaName3()
    {
        return $this->container['doc_ia_name_3'];
    }

    /**
     * Sets doc_ia_name_3
     *
     * @param string|null $doc_ia_name_3 Interné rozúčtovanie 3 - názov.
     *
     * @return self
     */
    public function setDocIaName3($doc_ia_name_3)
    {
        $this->container['doc_ia_name_3'] = $doc_ia_name_3;

        return $this;
    }

    /**
     * Gets doc_ia_code_3
     *
     * @return string|null
     */
    public function getDocIaCode3()
    {
        return $this->container['doc_ia_code_3'];
    }

    /**
     * Sets doc_ia_code_3
     *
     * @param string|null $doc_ia_code_3 Interné rozúčtovanie 3 - kód.
     *
     * @return self
     */
    public function setDocIaCode3($doc_ia_code_3)
    {
        $this->container['doc_ia_code_3'] = $doc_ia_code_3;

        return $this;
    }

    /**
     * Gets doc_ia_name_4
     *
     * @return string|null
     */
    public function getDocIaName4()
    {
        return $this->container['doc_ia_name_4'];
    }

    /**
     * Sets doc_ia_name_4
     *
     * @param string|null $doc_ia_name_4 Interné rozúčtovanie 4 - názov.
     *
     * @return self
     */
    public function setDocIaName4($doc_ia_name_4)
    {
        $this->container['doc_ia_name_4'] = $doc_ia_name_4;

        return $this;
    }

    /**
     * Gets doc_ia_code_4
     *
     * @return string|null
     */
    public function getDocIaCode4()
    {
        return $this->container['doc_ia_code_4'];
    }

    /**
     * Sets doc_ia_code_4
     *
     * @param string|null $doc_ia_code_4 Interné rozúčtovanie 4 - kód.
     *
     * @return self
     */
    public function setDocIaCode4($doc_ia_code_4)
    {
        $this->container['doc_ia_code_4'] = $doc_ia_code_4;

        return $this;
    }

    /**
     * Gets doc_ia_name_5
     *
     * @return string|null
     */
    public function getDocIaName5()
    {
        return $this->container['doc_ia_name_5'];
    }

    /**
     * Sets doc_ia_name_5
     *
     * @param string|null $doc_ia_name_5 Interné rozúčtovanie 5 - názov.
     *
     * @return self
     */
    public function setDocIaName5($doc_ia_name_5)
    {
        $this->container['doc_ia_name_5'] = $doc_ia_name_5;

        return $this;
    }

    /**
     * Gets doc_ia_code_5
     *
     * @return string|null
     */
    public function getDocIaCode5()
    {
        return $this->container['doc_ia_code_5'];
    }

    /**
     * Sets doc_ia_code_5
     *
     * @param string|null $doc_ia_code_5 Interné rozúčtovanie 5 - kód.
     *
     * @return self
     */
    public function setDocIaCode5($doc_ia_code_5)
    {
        $this->container['doc_ia_code_5'] = $doc_ia_code_5;

        return $this;
    }

    /**
     * Gets doc_ia_name_6
     *
     * @return string|null
     */
    public function getDocIaName6()
    {
        return $this->container['doc_ia_name_6'];
    }

    /**
     * Sets doc_ia_name_6
     *
     * @param string|null $doc_ia_name_6 Interné rozúčtovanie 6 - názov.
     *
     * @return self
     */
    public function setDocIaName6($doc_ia_name_6)
    {
        $this->container['doc_ia_name_6'] = $doc_ia_name_6;

        return $this;
    }

    /**
     * Gets doc_ia_code_6
     *
     * @return string|null
     */
    public function getDocIaCode6()
    {
        return $this->container['doc_ia_code_6'];
    }

    /**
     * Sets doc_ia_code_6
     *
     * @param string|null $doc_ia_code_6 Interné rozúčtovanie 6 - kód.
     *
     * @return self
     */
    public function setDocIaCode6($doc_ia_code_6)
    {
        $this->container['doc_ia_code_6'] = $doc_ia_code_6;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_name_1
     *
     * @return string|null
     */
    public function getDocTransferIaName1()
    {
        return $this->container['doc_transfer_ia_name_1'];
    }

    /**
     * Sets doc_transfer_ia_name_1
     *
     * @param string|null $doc_transfer_ia_name_1 Interné rozúčtovanie 1 - prevodka - názov.
     *
     * @return self
     */
    public function setDocTransferIaName1($doc_transfer_ia_name_1)
    {
        $this->container['doc_transfer_ia_name_1'] = $doc_transfer_ia_name_1;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_code_1
     *
     * @return string|null
     */
    public function getDocTransferIaCode1()
    {
        return $this->container['doc_transfer_ia_code_1'];
    }

    /**
     * Sets doc_transfer_ia_code_1
     *
     * @param string|null $doc_transfer_ia_code_1 Interné rozúčtovanie 1 - prevodka - kód.
     *
     * @return self
     */
    public function setDocTransferIaCode1($doc_transfer_ia_code_1)
    {
        $this->container['doc_transfer_ia_code_1'] = $doc_transfer_ia_code_1;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_name_2
     *
     * @return string|null
     */
    public function getDocTransferIaName2()
    {
        return $this->container['doc_transfer_ia_name_2'];
    }

    /**
     * Sets doc_transfer_ia_name_2
     *
     * @param string|null $doc_transfer_ia_name_2 Interné rozúčtovanie 2 - prevodka - názov.
     *
     * @return self
     */
    public function setDocTransferIaName2($doc_transfer_ia_name_2)
    {
        $this->container['doc_transfer_ia_name_2'] = $doc_transfer_ia_name_2;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_code_2
     *
     * @return string|null
     */
    public function getDocTransferIaCode2()
    {
        return $this->container['doc_transfer_ia_code_2'];
    }

    /**
     * Sets doc_transfer_ia_code_2
     *
     * @param string|null $doc_transfer_ia_code_2 Interné rozúčtovanie 2 - prevodka - kód.
     *
     * @return self
     */
    public function setDocTransferIaCode2($doc_transfer_ia_code_2)
    {
        $this->container['doc_transfer_ia_code_2'] = $doc_transfer_ia_code_2;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_name_3
     *
     * @return string|null
     */
    public function getDocTransferIaName3()
    {
        return $this->container['doc_transfer_ia_name_3'];
    }

    /**
     * Sets doc_transfer_ia_name_3
     *
     * @param string|null $doc_transfer_ia_name_3 Interné rozúčtovanie 3 - prevodka - názov.
     *
     * @return self
     */
    public function setDocTransferIaName3($doc_transfer_ia_name_3)
    {
        $this->container['doc_transfer_ia_name_3'] = $doc_transfer_ia_name_3;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_code_3
     *
     * @return string|null
     */
    public function getDocTransferIaCode3()
    {
        return $this->container['doc_transfer_ia_code_3'];
    }

    /**
     * Sets doc_transfer_ia_code_3
     *
     * @param string|null $doc_transfer_ia_code_3 Interné rozúčtovanie 3 - prevodka - kód.
     *
     * @return self
     */
    public function setDocTransferIaCode3($doc_transfer_ia_code_3)
    {
        $this->container['doc_transfer_ia_code_3'] = $doc_transfer_ia_code_3;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_name_4
     *
     * @return string|null
     */
    public function getDocTransferIaName4()
    {
        return $this->container['doc_transfer_ia_name_4'];
    }

    /**
     * Sets doc_transfer_ia_name_4
     *
     * @param string|null $doc_transfer_ia_name_4 Interné rozúčtovanie 4 - prevodka - názov.
     *
     * @return self
     */
    public function setDocTransferIaName4($doc_transfer_ia_name_4)
    {
        $this->container['doc_transfer_ia_name_4'] = $doc_transfer_ia_name_4;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_code_4
     *
     * @return string|null
     */
    public function getDocTransferIaCode4()
    {
        return $this->container['doc_transfer_ia_code_4'];
    }

    /**
     * Sets doc_transfer_ia_code_4
     *
     * @param string|null $doc_transfer_ia_code_4 Interné rozúčtovanie 4 - prevodka - kód.
     *
     * @return self
     */
    public function setDocTransferIaCode4($doc_transfer_ia_code_4)
    {
        $this->container['doc_transfer_ia_code_4'] = $doc_transfer_ia_code_4;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_name_5
     *
     * @return string|null
     */
    public function getDocTransferIaName5()
    {
        return $this->container['doc_transfer_ia_name_5'];
    }

    /**
     * Sets doc_transfer_ia_name_5
     *
     * @param string|null $doc_transfer_ia_name_5 Interné rozúčtovanie 5 - prevodka - názov.
     *
     * @return self
     */
    public function setDocTransferIaName5($doc_transfer_ia_name_5)
    {
        $this->container['doc_transfer_ia_name_5'] = $doc_transfer_ia_name_5;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_code_5
     *
     * @return string|null
     */
    public function getDocTransferIaCode5()
    {
        return $this->container['doc_transfer_ia_code_5'];
    }

    /**
     * Sets doc_transfer_ia_code_5
     *
     * @param string|null $doc_transfer_ia_code_5 Interné rozúčtovanie 5 - prevodka - kód.
     *
     * @return self
     */
    public function setDocTransferIaCode5($doc_transfer_ia_code_5)
    {
        $this->container['doc_transfer_ia_code_5'] = $doc_transfer_ia_code_5;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_name_6
     *
     * @return string|null
     */
    public function getDocTransferIaName6()
    {
        return $this->container['doc_transfer_ia_name_6'];
    }

    /**
     * Sets doc_transfer_ia_name_6
     *
     * @param string|null $doc_transfer_ia_name_6 Interné rozúčtovanie 6 - prevodka - názov.
     *
     * @return self
     */
    public function setDocTransferIaName6($doc_transfer_ia_name_6)
    {
        $this->container['doc_transfer_ia_name_6'] = $doc_transfer_ia_name_6;

        return $this;
    }

    /**
     * Gets doc_transfer_ia_code_6
     *
     * @return string|null
     */
    public function getDocTransferIaCode6()
    {
        return $this->container['doc_transfer_ia_code_6'];
    }

    /**
     * Sets doc_transfer_ia_code_6
     *
     * @param string|null $doc_transfer_ia_code_6 Interné rozúčtovanie 6 - prevodka - kód.
     *
     * @return self
     */
    public function setDocTransferIaCode6($doc_transfer_ia_code_6)
    {
        $this->container['doc_transfer_ia_code_6'] = $doc_transfer_ia_code_6;

        return $this;
    }

    /**
     * Gets ns_number_partner
     *
     * @return string|null
     */
    public function getNsNumberPartner()
    {
        return $this->container['ns_number_partner'];
    }

    /**
     * Sets ns_number_partner
     *
     * @param string|null $ns_number_partner Číslo partnera.
     *
     * @return self
     */
    public function setNsNumberPartner($ns_number_partner)
    {
        $this->container['ns_number_partner'] = $ns_number_partner;

        return $this;
    }

    /**
     * Gets commission
     *
     * @return string|null
     */
    public function getCommission()
    {
        return $this->container['commission'];
    }

    /**
     * Sets commission
     *
     * @param string|null $commission Číslo obchodného prípadu.
     *
     * @return self
     */
    public function setCommission($commission)
    {
        $this->container['commission'] = $commission;

        return $this;
    }

    /**
     * Gets weight_stock_items
     *
     * @return double|null
     */
    public function getWeightStockItems()
    {
        return $this->container['weight_stock_items'];
    }

    /**
     * Sets weight_stock_items
     *
     * @param double|null $weight_stock_items Celková hmotnosť dokladu (kg).
     *
     * @return self
     */
    public function setWeightStockItems($weight_stock_items)
    {
        $this->container['weight_stock_items'] = $weight_stock_items;

        return $this;
    }

    /**
     * Gets items
     *
     * @return \OpenAPI\Client\Model\DtoDocumentItemGet[]|null
     */
    public function getItems()
    {
        return $this->container['items'];
    }

    /**
     * Sets items
     *
     * @param \OpenAPI\Client\Model\DtoDocumentItemGet[]|null $items Položky dokladu.
     *
     * @return self
     */
    public function setItems($items)
    {
        $this->container['items'] = $items;

        return $this;
    }

    /**
     * Gets enclosures
     *
     * @return \OpenAPI\Client\Model\DtoDocumentEnclosure[]|null
     */
    public function getEnclosures()
    {
        return $this->container['enclosures'];
    }

    /**
     * Sets enclosures
     *
     * @param \OpenAPI\Client\Model\DtoDocumentEnclosure[]|null $enclosures enclosures
     *
     * @return self
     */
    public function setEnclosures($enclosures)
    {
        $this->container['enclosures'] = $enclosures;

        return $this;
    }

    /**
     * Gets custom_columns
     *
     * @return \OpenAPI\Client\Model\CustomField[]|null
     */
    public function getCustomColumns()
    {
        return $this->container['custom_columns'];
    }

    /**
     * Sets custom_columns
     *
     * @param \OpenAPI\Client\Model\CustomField[]|null $custom_columns custom_columns
     *
     * @return self
     */
    public function setCustomColumns($custom_columns)
    {
        $this->container['custom_columns'] = $custom_columns;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed|null
     */
    public function offsetGet($offset)
    {
        return $this->container[$offset] ?? null;
    }

    /**
     * Sets value based on offset.
     *
     * @param int|null $offset Offset
     * @param mixed    $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Serializes the object to a value that can be serialized natively by json_encode().
     * @link https://www.php.net/manual/en/jsonserializable.jsonserialize.php
     *
     * @return mixed Returns data which can be serialized by json_encode(), which is a value
     * of any type other than a resource.
     */
    public function jsonSerialize()
    {
       return ObjectSerializer::sanitizeForSerialization($this);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        return json_encode(
            ObjectSerializer::sanitizeForSerialization($this),
            JSON_PRETTY_PRINT
        );
    }

    /**
     * Gets a header-safe presentation of the object
     *
     * @return string
     */
    public function toHeaderValue()
    {
        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


